<!--
 * Copyright 2018 OpenCensus Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>RpcZ</title>
    <link rel="shortcut icon" href="//www.opencensus.io/favicon.ico" />
</head>

<body>
    <h1>RPC Stats</h1>
    <p></p>
    <p>
        <table bgcolor="#eeeeff" width=100%>
            <tr align=center>
                <td>
                    <font size=+2>Sent</font>
                </td>
            </tr>
        </table>
    </p>
    <table bgcolor="#fff5ee" frame=box cellspacing=0 cellpadding=2>
        <tr bgcolor="#eee5de">
            <th></th>
            <td></td>
            <th class="l1" colspan=3>Count</th>
            <td></td>
            <th class="l1" colspan=3>Avg latency (ms)</th>
            <td></td>
            <th class="l1" colspan=3>Rate (rpc/s)</th>
            <td></td>
            <th class="l1" colspan=3>Input (kb/s)</th>
            <td></td>
            <th class="l1" colspan=3>Output (kb/s)</th>
            <td></td>
            <th class="l1" colspan=3>Errors</th>
            <td></td>
        </tr>
        <tr bgcolor="#eee5de">
            <th align=left>Method</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
        </tr>
        <? for(let i in zMeasuresSent) { ?>
            <tr>
                <td><b><?= `${i}` ?></b></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].count.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].count.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].count.tot}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].avgLatency.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].avgLatency.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].avgLatency.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].rate.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].rate.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].rate.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].input.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].input.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].input.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].output.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].output.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].output.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresSent[i].errors.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].errors.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresSent[i].errors.tot}` ?></td>
                <td></td>
            </tr>
        <? } ?>
    </table>
    <p>
        <table bgcolor="#eeeeff" width=100%>
            <tr align=center>
                <td>
                    <font size=+2>Received</font>
                </td>
            </tr>
        </table>
    </p>
    <table bgcolor="#fff5ee" frame=box cellspacing=0 cellpadding=2>
        <tr bgcolor="#eee5de">
            <th>
            </th>
            <td>
            </td>
            <th class="l1" colspan=3>Count</th>
            <td></td>
            <th class="l1" colspan=3>Avg latency (ms)</th>
            <td></td>
            <th class="l1" colspan=3>Rate (rpc/s)</th>
            <td></td>
            <th class="l1" colspan=3>Input (kb/s)</th>
            <td></td>
            <th class="l1" colspan=3>Output (kb/s)</th>
            <td></td>
            <th class="l1" colspan=3>Errors</th>
            <td></td>
        </tr>
        <tr bgcolor="#eee5de">
            <th align=left>Method</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <th align=right>Min.</th>
            <th align=right>Hr.</th>
            <th align=right>Tot.</th>
        </tr>
        <? for(let i in zMeasuresReceived) { ?>
            <tr>
                <td><b><?= `${i}` ?></b></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].count.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].count.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].count.tot}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].avgLatency.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].avgLatency.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].avgLatency.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].rate.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].rate.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].rate.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].input.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].input.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].input.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].output.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].output.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].output.tot.toFixed(FIXED_SIZE)}` ?></td>
                <td></td>
                <td align="right"><?= `${zMeasuresReceived[i].errors.min.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].errors.hr.toFixed(FIXED_SIZE)}` ?></td>
                <td align="right"><?= `${zMeasuresReceived[i].errors.tot}` ?></td>
                <td></td>
            </tr>
        <? } ?>
    </table>
</body>

</html>